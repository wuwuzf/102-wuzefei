本周收获最大的是学懂了数据扁平化 顺便将上周的路由理解的更深入  

为什么要数据扁平化 

因为要使后续对数据的操作变得简单  数据扁平化后 每个数据都直接暴露在最外层 虽然传递数据的复杂性没变 但总的数据量是变少了 在修改数据时的工作量也降低不少

怎样实现数据扁平化

将数据里二层及以下的数据拆解成一个独立的部分 原数据中用唯一标识来代替之前的数据  变成由编号组成的数据

扁平化的操作具体是什么

 1/制定扁平化规则 ：用唯一标识 如id... 来重新定义这组数据 之后便可通过标识来获取到具体的数据  const xxx = new schema.Entity('',{服务器获取的原数据：自定的规则，...},{idAttribute:'标识'}) 时数组就返回数组。

 2/在action里添加一个扁平化函数，在api中获取到数据时便可调用这个函数进行扁平化 normalizeFuc：json=>{ const xxx = normalize(json,Schema.规则)}  return xxx;   

 3/之后数据送到reducer中处理 reducer返回 result 和 各个实体 entities

 4/组件里用到时再将数据还原 用id map result 根据扁平化后各数据部分标识和其实体再将其组装成原始数据 const xxx = result.map(id =>规则[id] )
